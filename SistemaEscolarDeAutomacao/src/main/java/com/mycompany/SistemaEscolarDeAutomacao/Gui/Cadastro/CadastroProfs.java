/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.SistemaEscolarDeAutomacao.Gui.Cadastro;

import com.mycompany.SistemaEscolarDeAutomacao.Gerais.PlaceHolder;

/**
 *
 * @author mrdaniel
 */
public class CadastroProfs extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(CadastroProfs.class.getName());

    private static CadastroProfs instance;

    public static CadastroProfs getInstance() {
        if (instance == null) {
            instance = new CadastroProfs();
        }
        return instance;
    }

    public static void setInstance(CadastroProfs instance) {
        CadastroProfs.instance = instance;
    }
    
    
    /**
     * Creates new form CadastroProfs
     */
    public CadastroProfs() {
        initComponents();
        PlaceHolder.addPlaceHolder(nomeProfessor);
        PlaceHolder.addPlaceHolder(idadeProfessor);
        PlaceHolder.addPlaceHolder(cpfProfessor);
        PlaceHolder.addPlaceHolder(dataNascimento);
        PlaceHolder.addPlaceHolderComboBox(turnoProfessor);
        PlaceHolder.addPlaceHolderComboBox(salaProfessor);
        PlaceHolder.addPlaceHolderComboBox(materiaProfessor);
        PlaceHolder.addPlaceHolderComboBox(horarioProfessor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataNascimento = new javax.swing.JTextField();
        cpfProfessor = new javax.swing.JTextField();
        idadeProfessor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nomeProfessor = new javax.swing.JTextField();
        turnoProfessor = new javax.swing.JComboBox<>();
        salaProfessor = new javax.swing.JComboBox<>();
        voltar = new javax.swing.JButton();
        Cadastrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        horarioProfessor = new javax.swing.JComboBox<>();
        Cadastrar1 = new javax.swing.JButton();
        Cadastrar2 = new javax.swing.JButton();
        materiaProfessor = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        usuarioProfessor = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        dataNascimento.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        dataNascimento.setText("--/--/---- (Data de nascimento)");
        dataNascimento.setNextFocusableComponent(turnoProfessor);
        dataNascimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dataNascimentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dataNascimentoFocusLost(evt);
            }
        });
        dataNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataNascimentoActionPerformed(evt);
            }
        });

        cpfProfessor.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        cpfProfessor.setText("CPF");
        cpfProfessor.setNextFocusableComponent(dataNascimento);
        cpfProfessor.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                cpfProfessorComponentRemoved(evt);
            }
        });
        cpfProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cpfProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cpfProfessorFocusLost(evt);
            }
        });
        cpfProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfProfessorActionPerformed(evt);
            }
        });

        idadeProfessor.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        idadeProfessor.setText("Idade");
        idadeProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                idadeProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                idadeProfessorFocusLost(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Adwaita Sans", 0, 36)); // NOI18N
        jLabel1.setText("Cadastro de professores");

        nomeProfessor.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        nomeProfessor.setText("Nome");
        nomeProfessor.setNextFocusableComponent(idadeProfessor);
        nomeProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomeProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nomeProfessorFocusLost(evt);
            }
        });

        turnoProfessor.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        turnoProfessor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o turno", "Matutino", "Vespertino", "Noturno" }));
        turnoProfessor.setNextFocusableComponent(salaProfessor);
        turnoProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                turnoProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                turnoProfessorFocusLost(evt);
            }
        });

        salaProfessor.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        salaProfessor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione a sala" }));
        salaProfessor.setNextFocusableComponent(materiaProfessor);
        salaProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                salaProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                salaProfessorFocusLost(evt);
            }
        });

        voltar.setText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        Cadastrar.setText("Cadastrar");
        Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Adwaita Sans", 0, 18)); // NOI18N
        jLabel2.setText("Selecionar horário");

        jLabel3.setFont(new java.awt.Font("Adwaita Sans", 0, 18)); // NOI18N
        jLabel3.setText("Dados pessoais");

        jLabel4.setFont(new java.awt.Font("Adwaita Sans", 0, 18)); // NOI18N
        jLabel4.setText("Adicionar matéria");

        horarioProfessor.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        horarioProfessor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o horário" }));
        horarioProfessor.setNextFocusableComponent(usuarioProfessor);
        horarioProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                horarioProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                horarioProfessorFocusLost(evt);
            }
        });

        Cadastrar1.setText("Confirmar horário");
        Cadastrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cadastrar1ActionPerformed(evt);
            }
        });

        Cadastrar2.setText("Cadastrar matéria");
        Cadastrar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cadastrar2ActionPerformed(evt);
            }
        });

        materiaProfessor.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        materiaProfessor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione a matéria" }));
        materiaProfessor.setNextFocusableComponent(horarioProfessor);
        materiaProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                materiaProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                materiaProfessorFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Adwaita Sans", 0, 18)); // NOI18N
        jLabel5.setText("Selecionar o usuário");

        usuarioProfessor.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        usuarioProfessor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o usuário correspondente" }));
        usuarioProfessor.setNextFocusableComponent(voltar);
        usuarioProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usuarioProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usuarioProfessorFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(dataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpfProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idadeProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(turnoProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salaProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(materiaProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(horarioProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usuarioProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(133, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(voltar)
                .addGap(6, 6, 6)
                .addComponent(Cadastrar)
                .addGap(6, 6, 6)
                .addComponent(Cadastrar2)
                .addGap(6, 6, 6)
                .addComponent(Cadastrar1))
            .addGroup(layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jLabel1)
                .addGap(243, 243, 243))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(materiaProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idadeProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(horarioProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(turnoProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usuarioProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salaProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cadastrar)
                    .addComponent(voltar)
                    .addComponent(Cadastrar1)
                    .addComponent(Cadastrar2))
                .addGap(25, 25, 25))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void dataNascimentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataNascimentoFocusGained
        // TODO add your handling code here:
        if (dataNascimento.getText().equals("--/--/---- (Data de nascimento)")) {
            dataNascimento.setText(null);
            dataNascimento.requestFocus();
            PlaceHolder.removePlaceHolder(dataNascimento);
        }
    }//GEN-LAST:event_dataNascimentoFocusGained

    private void dataNascimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataNascimentoFocusLost
        // TODO add your handling code here:
        if (dataNascimento.getText().isEmpty()) {
            dataNascimento.setText("--/--/---- (Data de nascimento)");
            PlaceHolder.addPlaceHolder(dataNascimento);
        }
    }//GEN-LAST:event_dataNascimentoFocusLost

    private void dataNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataNascimentoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_dataNascimentoActionPerformed

    private void cpfProfessorComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_cpfProfessorComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfProfessorComponentRemoved

    private void cpfProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpfProfessorFocusGained
        // TODO add your handling code here:
        if (cpfProfessor.getText().equals("CPF")) {
            cpfProfessor.setText(null);
            cpfProfessor.requestFocus();
            PlaceHolder.removePlaceHolder(cpfProfessor);
        }
    }//GEN-LAST:event_cpfProfessorFocusGained

    private void cpfProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpfProfessorFocusLost
        // TODO add your handling code here:
        if (cpfProfessor.getText().isEmpty()) {
            cpfProfessor.setText("CPF");
            dataNascimento.requestFocus();
            PlaceHolder.addPlaceHolder(cpfProfessor);
        }
    }//GEN-LAST:event_cpfProfessorFocusLost

    private void cpfProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfProfessorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfProfessorActionPerformed

    private void idadeProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idadeProfessorFocusGained
        // TODO add your handling code here:
          if (idadeProfessor.getText().equals("Idade")) {
            idadeProfessor.setText(null);
            idadeProfessor.requestFocus();
            PlaceHolder.removePlaceHolder(idadeProfessor);
        }
    }//GEN-LAST:event_idadeProfessorFocusGained

    private void idadeProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idadeProfessorFocusLost
        // TODO add your handling code here:
           if (idadeProfessor.getText().isEmpty()) {
            idadeProfessor.setText("Idade");
            PlaceHolder.addPlaceHolder(idadeProfessor);
        }
    }//GEN-LAST:event_idadeProfessorFocusLost

    private void nomeProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeProfessorFocusGained
        // TODO add your handling code here:
        if (nomeProfessor.getText().equals("Nome")) {
            nomeProfessor.setText(null);
            nomeProfessor.requestFocus();
            PlaceHolder.removePlaceHolder(nomeProfessor);
        }
    }//GEN-LAST:event_nomeProfessorFocusGained

    private void nomeProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeProfessorFocusLost
        // TODO add your handling code here:
        if (nomeProfessor.getText().isEmpty()) {
            nomeProfessor.setText("Nome");
            PlaceHolder.addPlaceHolder(nomeProfessor);
        }
    }//GEN-LAST:event_nomeProfessorFocusLost

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        dispose();
        CadastroAluno.setInstance(null);
        Cadastros.getInstance().setVisible(true);
    }//GEN-LAST:event_voltarActionPerformed

    private void CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarActionPerformed
        // TODO add your handling code here:
        /*String nome = nomeAluno.getText();
        String permissao = idade.getSelectedItem().toString();
        String email = cpfAluno.getText();
        String telefone = dataNascimento.getText();

        DateTimeFormatter formatadorData = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate data = LocalDate.parse(dataCadastro.getText(), formatadorData);

        DateTimeFormatter formatadorHora = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalTime hora = LocalTime.parse(horaCadastro.getText(), formatadorHora);

        String login = loginUsuario.getText();
        String senha = senhaUsuario.getText();

        String log = "Início do log de: " + nome + " (" + permissao + ").";

        try {
            if (!nome.isEmpty() && !permissao.equalsIgnoreCase("selecione") && (!data.toString().isEmpty() || data.toString().matches("(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/(19|20)[0-9]{2}")) && (!hora.toString().isEmpty() || !hora.toString().matches("\n"
                + "    (\"(0[1-9]|[1][0-9]|[2][0-3]):(0[1-9]|[12345][0-9]):(0[1-9]|[12345][0-9])")) && !login.isEmpty() && !senha.isEmpty()) {
        User u = new User(nome, permissao, email, telefone, data, hora, login, senha, log);
        UserDAO ud = new UserDAO();
        ud.cadastrarJPA(u);
        JOptionPane.showMessageDialog(null, "Dados cadastrados com sucesso.");
        nomeAluno.setText("");
        idade.setSelectedIndex(0);
        cpfAluno.setText("");
        dataNascimento.setText("");
        dataCadastro.setText("");
        horaCadastro.setText("");
        loginUsuario.setText("");
        senhaUsuario.setText("");

        } else {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro, verifique os campos e tente novamente!");
        }
        } catch (Exception e) {
            System.out.println("Ocorreu um erro, preencha todos os campos e tente novamente!");
            System.out.println(e);
        }*/
    }//GEN-LAST:event_CadastrarActionPerformed

    private void Cadastrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cadastrar1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Cadastrar1ActionPerformed

    private void Cadastrar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cadastrar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Cadastrar2ActionPerformed

    private void turnoProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_turnoProfessorFocusGained
        // TODO add your handling code here:
        if (turnoProfessor.getSelectedItem().toString().equals("Selecione o turno")) {
            turnoProfessor.requestFocus();
            PlaceHolder.removePlaceHolderComboBox(turnoProfessor);
        }
    }//GEN-LAST:event_turnoProfessorFocusGained

    private void turnoProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_turnoProfessorFocusLost
        // TODO add your handling code here:
        if (turnoProfessor.getSelectedItem().toString().equals("Selecione o turno")) {
            PlaceHolder.addPlaceHolderComboBox(turnoProfessor);
        }
    }//GEN-LAST:event_turnoProfessorFocusLost

    private void salaProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_salaProfessorFocusGained
        // TODO add your handling code here:
        if (salaProfessor.getSelectedItem().toString().equals("Selecione a sala")) {
            salaProfessor.requestFocus();
            PlaceHolder.removePlaceHolderComboBox(salaProfessor);
        }
    }//GEN-LAST:event_salaProfessorFocusGained

    private void salaProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_salaProfessorFocusLost
        // TODO add your handling code here:
        if (salaProfessor.getSelectedItem().toString().equals("Selecione a sala")) {
            PlaceHolder.addPlaceHolderComboBox(salaProfessor);
        }
    }//GEN-LAST:event_salaProfessorFocusLost

    private void materiaProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_materiaProfessorFocusGained
        // TODO add your handling code here:
        if (materiaProfessor.getSelectedItem().toString().equals("Selecione a matéria")) {
            materiaProfessor.requestFocus();
            PlaceHolder.removePlaceHolderComboBox(materiaProfessor);
        }
    }//GEN-LAST:event_materiaProfessorFocusGained

    private void materiaProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_materiaProfessorFocusLost
        // TODO add your handling code here:
         if (materiaProfessor.getSelectedItem().toString().equals("Selecione a matéria")) {
            PlaceHolder.addPlaceHolderComboBox(materiaProfessor);
        }
    }//GEN-LAST:event_materiaProfessorFocusLost

    private void horarioProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_horarioProfessorFocusGained
        // TODO add your handling code here:
        if (horarioProfessor.getSelectedItem().toString().equals("Selecione o horário")) {
            horarioProfessor.requestFocus();
            PlaceHolder.removePlaceHolderComboBox(horarioProfessor);
        }
    }//GEN-LAST:event_horarioProfessorFocusGained

    private void horarioProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_horarioProfessorFocusLost
        // TODO add your handling code here:
         if (horarioProfessor.getSelectedItem().toString().equals("Selecione o horário")) {
            PlaceHolder.addPlaceHolderComboBox(horarioProfessor);
        }
    }//GEN-LAST:event_horarioProfessorFocusLost

    private void usuarioProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usuarioProfessorFocusGained
        // TODO add your handling code here:
        if (usuarioProfessor.getSelectedItem().toString().equals("Selecione o usuário correspondente")) {
            usuarioProfessor.requestFocus();
            PlaceHolder.removePlaceHolderComboBox(usuarioProfessor);
        }
    }//GEN-LAST:event_usuarioProfessorFocusGained

    private void usuarioProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usuarioProfessorFocusLost
        // TODO add your handling code here:
         if (usuarioProfessor.getSelectedItem().toString().equals("Selecione o usuário correspondente")) {
            PlaceHolder.addPlaceHolderComboBox(usuarioProfessor);
        }
    }//GEN-LAST:event_usuarioProfessorFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new CadastroProfs().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cadastrar;
    private javax.swing.JButton Cadastrar1;
    private javax.swing.JButton Cadastrar2;
    private javax.swing.JTextField cpfProfessor;
    private javax.swing.JTextField dataNascimento;
    private javax.swing.JComboBox<String> horarioProfessor;
    private javax.swing.JTextField idadeProfessor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> materiaProfessor;
    private javax.swing.JTextField nomeProfessor;
    private javax.swing.JComboBox<String> salaProfessor;
    private javax.swing.JComboBox<String> turnoProfessor;
    private javax.swing.JComboBox<String> usuarioProfessor;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
